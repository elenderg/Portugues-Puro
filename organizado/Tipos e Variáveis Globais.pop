\ -------------------------------------------------------------------------------------------------------
\                                                  DEFINIÇÃO DE TIPOS                                                         |
\ -------------------------------------------------------------------------------------------------------
Um apelido é um nome.
Um byte ignorável é um byte.
Um cabeçalho compactado é uma representação interna da rotina.
Um cabeçalho de rotina é um subtexto.
Um campo de estrutura-membro é um campo de estrutura.
Um campo português feminino é um campo.
Um campo português é um campo.
Um campo é uma variável.
Uma contagem de nomes é uma contagem.
Um corpo de variável global é um subtexto.
Um deslocamento é um número.
Um endereço base é um endereço.
Um endereço do arquivo atual é um endereço completo.
Um endereço do cabeçalho é um endereço.
Um endereço do nome é um endereço.
Um endereço local é um endereço de byte .
Um endereço thunk é um endereço.
Um endereço é um número.
Uma etiqueta é um número.
Uma expressão matematica é um termo.
Uma frase é uma string.
Uma instrução é um subtexto.
Uma mensagem de erro é uma string.
Um nome da DLL é um nome.
Um nome da função é um nome.
Um nome do tipo primitivo é um nome.
Um nome do tipo é um nome.
Um nome plural é um nome.
Um novo nome é um nome.
Uma palavra-chave de designação é uma palavra-chave.
Uma palavra-chave de referenciamento é uma palavra-chave.
Uma palavra-chave de reutilização de rotina é uma palavra-chave.
Uma palavra-chave é uma string.
Um parte da cifra binária é um subtexto.
Um parâmetro é uma variável.
Uma referência da rotina é [composta de] umas unidades semânticas.
Uma representação de emprego é uma representação interna da rotina.
Uma representação interna da rotina é uma string.  \ moniker
\ https://learn.microsoft.com/pt-br/windows/win32/com/monikers
\ Trata-se de uma representação interna de um nome de rotina, sendo que
\ • Não há artigos precedendo os tipos dos parâmetros. 
\ • Os tipos dos parâmetros estão rodeados por colchetes. 
\ • As preposições são expandidas para incluir seus sinônimos.
\ Cada pedaço de um moniker é uma unidade semântica. Por exemplo:
\ Nome da rotina: Rotina para que se adicione um número para uma contagem:
\ Moniker: adicione [número] em/para [contagem]
\ Monikettes: 
\ 1º: adicione 
\ 2º [número] 
\ 3º em/para 
\ 4º [contagem]
\ Essa representação interna é necessária porque:
\ 1) quando o compilador busca a rotina a ser chamada, 
\   ela faz com que seja fácil detectar o tipo base do tipo atual
\   (por exemplo, [contagem] é um tipo derivado de [número])  
\ 2) Faz com que seja fácil encontrar as preposições sinônimas
\ 3) Nos ajuda a entender como o compilador entendeu a invocação da rotina, 
\   já que essa representação é exibida nas mensagens de erro.
Uma rotina alvo é uma rotina.
Uma rotina de função é uma rotina.
Um scratch é uma variável local.
Um sinalizador de compilação é um sinalizador.
Um sinalizador de empilhamento é um sinalizador.
Um sinalizador de erros é um sinalizador.
Um sinalizador de função é um sinalizador.
Um sinalizador de informações complementares é um sinalizador.
Um sinalizador de passagem por-valor é um sinalizador.
Um sinalizador de possessivo reverso é um sinalizador.
Um sinalizador de recursividade é um sinalizador.
Um sinalizador de redirecionamento é um sinalizador.
Um sinalizador de referência é um sinalizador.
Uma string de erro é uma string.
Uma string do cabeçalho é uma string.
Uma string do corpo é uma string.
Um tamanho do parâmetro é um tamanho.
Um tamanho local é um tamanho.
Um texto inicializador é uma string.
Um tipo base é um tipo.
Um tipo encadeado é um tipo.
Um tipo estruturado é um tipo.
Um tipo primitivo é um tipo.
Um trecho de listagem é um trecho.
Um valor literal é uma variável.
Uma variável global é uma variável.
Uma variável intermediária é uma variável local.
Uma variável local é uma variável.
\Um catálogo de apelidos é um catálogo.
\Um problema é um número.

Um arquivo fonte é uma lista com
  Um endereço completo e
  Um trecho.

Um Cabeçalho da DLL é uma estrutura com
  Um endereço denominado primeiro thunk, \ consulte https://www.linkedin.com/pulse/why-pe-need-original-first-thunkoft-milad-kahsari-alhadi/ 
  Um número denominado TimeStamp, \ Set to zero until bound; then this feld is set to the TimeDateStamp of the exporting FileHeader of the DLL
  Um endereço denominado corrente de encaminhamento, \ forward chain: The 32-bit index of the first forwarder in the list of imported functions
  Um endereço denominado endereço do nome, \Esse endereço contém o RVA [Endereço Virtual Relativo] da DLL a ser carregada na memória. É um valor dword.
  \É composto por: RVA = Base da Imagem + Ordem Endian
  Um endereço denominado primeiro endereço thunk de memória.

Um Cabeçalho DOS é uma estrutura com
\ Documentação: -> https://learn.microsoft.com/pt-br/windows/win32/debug/pe-format
  Uma word denominada Signature,
  Uma word denominada NumberOfBytesOnLastPage,
  Uma word denominada NumberOfPages,
  Uma word denominada Relocations,
  Uma word denominada SizeOfHeaderInParagraphs,
  Uma word denominada MinimumExtraParagraphsNeeded,
  Uma word denominada MamixmumExtraParagraphsNeeded,
  Uma word denominada InitialRelativeSS,  \\ Initial Sstack segment
  Uma word denominada InitialSP,  \\ Initial Stack Pointer value.
  Uma word denominada InitialChecksum,
  Uma word denominada InitialIP,  \\ Initial Instruction Pointer value.
  Uma word denominada InitialRelativeCS, \\ Pre-relocated initial CS register value.
  Uma word denominada AddressOfRelocationTableInFile, \
  Uma word denominada OverlyNumber,
  8 bytes denominados ReservedBytes,
  Uma word denominada OEM_Identifier,
  Uma word denominada OEM_Info,
  20 bytes denominados ReservedWords,
  Um número denominado AddressOfPEHeaderInFile.

Um Cabeçalho de Seção PE é uma estrutura com
  8 bytes denominados Nome, \ Each section header has a name fielf up to eight characters em comprimento, for which the primeiro character must be a period.
  Um número denominado SizeInBytes,
  Um número denominado AddressInMemory,
  Um número denominado SizeInFile,
  Um número denominado AddressInFile,
  12 bytes denominados Reserved,
  Um número denominado Characteristics. \ Defines the section Characteristics.
  \These values are encontrado both em WINNT.H and in the Portable Executable Format specification.

Um Cabeçalho PE é uma estrutura com
  \Para obter mais informações, consulte https://learn.microsoft.com/pt-br/windows/win32/debug/pe-format
  \ Cabeçalho MS-DOS . A estrutura básica está representada abaixo:
  Um número denominado Signature,
  Uma word denominada MachineType,
  Uma word denominada NumberOfSections,
  Um número denominado TimeStamp,
  Um número denominado PointerToSymbolTable,
  Um número denominado NumberOfSymbols,
  Uma word denominada SizeOfOptionalHeaderInBytes,
  Uma word denominada Characteristics,
  \ PARTE OPCIONAL - _IMAGE_OPTIONAL_HEADER64
  Uma word denominada MagicNumber,
  Um byte denominado MajorLinkerVersion,
  Um byte denominado MinorLinkerVersion,
  Um número denominado SizeOfCodeInFile, \ SizeOfCode
  Um número denominado SizeOfInitializedDataInFile,
  Um número denominado SizeOfUninitializedDataInFile,
  Um número denominado AddressOfEntryPointInMemory, \ AddressOfEntryPoint
  Um número denominado AddressOfCodeInMemory,  [BaseOfCode]
  Um número denominado AddressOfInitializedDataInMemory, [BaseOfData]
  Um número denominado ImageBase,
  Um número denominado MemoryAlignment, [SectionAlignment]
  Um número denominado FileAlignment,
  Uma word denominada OS_MajorVersion, [MajorOperatingSystemVersion]
  Uma word denominada OS_MinorVersion, [MinorOperatingSystemVersion]
  Uma word denominada UserMajorVersion,  [MajorImageVersion]
  Uma word denominada UserMinorVersion, [MinorImageVersion]
  Uma word denominada SubsystemMajorVersion, [MajorSubsystemVersion]
  Uma word denominada SubsystemMinorVersion, [MinorSubsystemVersion]
  Um número denominado Reserved,  [Win32VersionValue]
  Um número denominado SizeOfImageInMemory, [SizeOfImage]
  Um número denominado SizeOfAllHeadersInFile, [SizeOfHeaders]
  Um número denominado CheckSum,
  Uma word denominada Subsystem,
  Uma word denominada DLLCharacteristics,
  Um número denominado MaxStack, [SizeOfStackReserve]
  Um número denominado MinStack, [SizeOfStackCommit]
  Um número denominado MaxHeap, [SizeOfHeapReserve]
  Um número denominado MinHeap, [SizeOfHeapCommit]
  Um número denominado LoaderFlags,  \ _IMAGE_OPTIONAL_HEADER64
  Um número denominado NumberOfDirectories, [NumberOfRvaAndSizes]
  8 bytes denominados Directory0,
  Um número denominado ImageDirectoryEntryImportAddress,
  Um número denominado ImageDirectoryEntryImportSize,
  112 bytes denominados Directories2-15,
  Um Cabeçalho de Seção PE denominado Idata Section,
  Um Cabeçalho de Seção PE denominado Data Section,
  Um Cabeçalho de Seção PE denominado Code Section.

Um campo de estrutura é uma estrutura com
  Um sinalizador de redirecionamento,
  Um campo (referência),
  Uma rotina de função (referência),
  Um sinalizador de empilhamento.

Uma DLL é uma lista com
  Um endereço do nome,
  Um endereço do cabeçalho,
  Um nome,
  Um cabeçalho da DLL,
  Umas funções.

Um fragmento é uma lista com
  \ we have three lists in the compiler memory — tipos, variables, and rotinas
  \ each rotina consists of a series of logical instructions called “fragments.” There are just 22 fragmento tipos:
  Uma etiqueta [break, Demanda Externa, Demanda Indireta, Demanda Interna, redirecionamento, end if, etapa conclusiva, exit, finalize, increment, Decodifique, jump false, load address, load eax, loop, not, etapa preliminar, push address, empilhamento de valor, salve eax, repeat, rotina address],
  Uma variável (referência) [Demanda Indireta, redirecionamento, increment, load address, load eax, pop, push address, empilhamento de valor, rotina address, salve eax],
  Uma segunda variável (referência) [load address],
  Uma rotina (referência) [Demanda Interna, rotina address],
  Uma função (referência) [Demanda Externa],
  Um número [increment],
  Um sinalizador [load eax], \SAL
  Um endereço,
  Um texto hexadecimal denominado código.

Uma função é uma lista com
  Um endereço do nome,
  Um endereço thunk, \ Consulte https://en.wikipedia.org/wiki/Thunk e http://ftp.informatik.rwth-aachen.de/jargon300/thunk.html
  Um nome e
  Um endereço.

Um protótipo de string é uma estrutura com
  Um caractere inicial e
  Um caractere final.

Uma rotina é uma lista com
  Um endereço local (referência),
  Um sinalizador de compatibilidade,
  Um sinalizador de deliberação,
  Um sinalizador de função,
  Um sinalizador de compilação,
  Um catálogo denominado catálogo de apelidos, \ alocação dinâmica. Verificar
  Uma representação interna da rotina,
  Umas unidades semânticas,
  Uns parâmetros,
  Um tamanho do parâmetro,
  Uma representação de emprego,
  Umas variáveis locais,
  Um tamanho local,
  Um cabeçalho de rotina,
  Uma string do cabeçalho,
  Umas instruções,
  Uma string do corpo,
  Uns fragmentos,
  Um endereço.

Um termo é uma estrutura com
  Uma variável e
  Uma frase.

Um tipo é uma lista com
  Um endereço local (referência),
  Um nome, um nome plural,
  Um cabeçalho compactado,
  Uma quantidade de caracteres,
  Um nome do tipo primitivo,
  Um tipo base (referência),
  Um nome do conteúdo,
  Um tipo do conteúdo (referência) [aplicável somente a ponteiros],
  Uma razão de escala,
  Uns campos [aplicável somente a estruturas],
  Um sinalizador de recursividade,
  Um sinalizador de informações complementares.

Uma unidade semântica é uma lista com
  Uma string,
  Um tipo (referência),
  Um variável (referência),
  \ para fazer o bubbling
  Um tipo atual (referência),
  Um subtexto atual.

Uma variável é uma lista com
  Um endereço local (referência),
  Um categoria [valor literal, variável global, variável local, parâmetro e scratch],
  Um sinalizador de compilação,
  Um nome,
  Um apelido,
  Um nome do tipo,
  Um tipo (referência), \ refere-se ao tipo real no caso de valores literais, variáveis globais e locais; tipos desreferenciados no caso de parâmetros e scratches
  Um endereço [aplicavel somente a variáveis globais e valores literais ] ou
  Um deslocamento sob o endereço [aplicável somente a variáveis locais, parâmetros, e campos],
  Uma contagem [aplicável a campos somente],
  Um sinalizador de referência [aplicável a campos somente],
  Um novo nome [aplicável a campos somente],
  Um sinalizador de passagem por-valor [aplicável a parâmetros somente],
  Um corpo de variável global [aplicável a variáveis globais somente],
  Um texto inicializador [aplicável a variáveis globais somente],
  Um valor literal (referência) [aplicável a variáveis globais somente - constante com a qual se inicializa a variável global],
  Um texto hexadecimal denominado data [literais somente].

Uma zona é uma estrutura com
  Um endereço base,
  Uma quantidade de caracteres e
  Um tamanho.

\ -------------------------------------------------------------------------------------------------------
\                                                   VARIÁVEIS GLOBAIS                                                         |
\ -------------------------------------------------------------------------------------------------------
Os arquivos fontes são uns arquivos fontes.
O catálogo de rotinas úteis é um catálogo.
O catálogo de tipos é um catálogo.
O catálogo de variáveis globais é um catálogo.
O catálogo de variáveis hexadecimais é um catálogo.
O catálogo geral de rotinas é um catálogo.
O endereço do cabeçalho usado atualmente é um endereço.
O endereço do nome usado atualmente é um endereço.
O endereço pré-calculado atual é um endereço.
A Etiqueta de Interrupção é uma etiqueta igual a 1.
A Etiqueta de Demanda Externa é uma etiqueta igual a 2.
A Etiqueta de Demanda Indireta é uma etiqueta igual a 3.
A Etiqueta de Demanda Interna é uma etiqueta igual a 4.
A Etiqueta de Redirecionamento é uma etiqueta igual a 5.
A Etiqueta Delimitadora de Bloco Condicional é uma etiqueta igual a 6.
A Etiqueta Conclusiva é uma etiqueta igual a 7.
A Etiqueta de Retorno é uma etiqueta igual a 8.
A Etiqueta de Finalização é uma etiqueta igual a 9.
A Etiqueta de Acréscimo é uma etiqueta igual a 10.
A Etiqueta de Decodificação é uma etiqueta igual a 11.
A Etiqueta de Desvio Falso é uma etiqueta igual a 12.
A Etiqueta de Carregamento de Endereço é uma etiqueta igual a 13.
A Etiqueta de Carregamento de Registrador EAX é uma etiqueta igual a 14.
A Etiqueta de Laço é uma etiqueta igual a 15.
A Etiqueta de Negação Lógica é uma etiqueta igual a 16.
A Etiqueta Preliminar é uma etiqueta igual a 17.
A Etiqueta de Inserção de Endereço [na stack] é uma etiqueta igual a 18.
A Etiqueta de Inserção de Valor [na stack] é uma etiqueta igual a 19.
A Etiqueta de Obtenção do Registrador EAX é uma etiqueta igual a 20.
A Etiqueta de Repetição é uma etiqueta igual a 21.
A Etiqueta de Endereço de Rotina é uma etiqueta igual a 22.
A Image Base é um endereço igual a 4194304 [$00400000].
O nome do conteúdo é um nome.
O percorredor de contrações é um percorredor.
A Região de Código é um zona.
A Região de Dados é um zona.
A Seção de DLLs é uma zona.
As DLLs são umas DLLs.
A rotina utilizada atualmente é uma rotina.
As Rotinas são umas rotinas.
O temporizador de adição de rotinas pré-definidas de inicialização é um temporizador.
O temporizador de adição de rotinas pré-definidas de mémoria é um temporizador.
O temporizador de análise/verificação é um temporizador.
O temporizador de compilação de cabeçalhos de rotina é um temporizador.
O temporizador de compilação do conteúdo das rotinas é um temporizador.
O temporizador de deslocamentos é um temporizador.
O temporizador de endereçamento é um temporizador.
O temporizador de escrita é um temporizador. \ Um temporizador é uma estrutura com uma contagem, uns intervalos iniciais e uns intervalos totais. \ Um intervalo é um número.
O temporizador de etapas de cálculo é um temporizador.
O temporizador de ferramentas de catalogação é um temporizador.
O temporizador de operacionalização é um temporizador.
O temporizador de resolução de tipos é um temporizador.
O temporizador de resolução de variáveis globais é um temporizador.
O temporizador de transmutação é um temporizador.
O temporizador de vinculação é um temporizador.
O tipo do conteúdo é um tipo.
Os tipos são uns tipos.
As Variáveis globais predefinidas são umas variáveis globais.
As Variáveis globais são umas variáveis globais.
Os valores literais são uns valores literais.

O compilador é uma estrutura com
  Um endereço da pasta,
  Um temporizador,
  Um sinalizador de erros,
  Um mensagem de erro,
  Um endereço do arquivo atual,
  Um número da linha de erro,
  Uma contagem de nomes,
  Um trecho exe,
  Um trecho de listagem.
