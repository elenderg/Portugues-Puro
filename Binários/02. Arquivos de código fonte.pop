Rotina para que se compile um endereço da pasta (arquivos de código fonte): \#002 
  Se existir algum problema de compilação, retorne.
  Escreva "Carregando arquivos..." junto com o texto CRLF para StdOut.
  Comece o temporizador de operacionalização.
  Carregue os arquivos fontes. \ < -------------------------------------------------------------
  Suspenda o temporizador de operacionalização.


Rotina para que se carregue uns arquivos fontes: \ Lê os arquivos fonte do diretório especificado, armazenando-os em uma lista de arquivos
  Atribua ".pop" a uma nova extensão.
  Anexe o caractere NULL após a nova extensão.
  Itere.
    Se existir algum problema de compilação, retorne.
    Obtenha um item desde o endereço da pasta deste compilador.
    Se o item não for encontrado, pare.
    Se a categoria deste item não for "arquivo", reitere.
    Se a extensão deste  item não for a nova extensão, reitere.
    Se o item parece ser encadernável, reitere. \ na versão atual essa linha pode ser removida, já que é específica do CAL/CEL
    Adicione um arquivo fonte para os arquivos fontes usando o endereço completo deste item.
    Carregue o arquivo fonte. \ < -------------------------------------------------------------
  Reitere.

Rotina para que se carregue um arquivo fonte: 
\ Carrega o conteúdo de um arquivo fonte para o `Trecho` do objeto `ArquivoFonte`,
\ expandindo contrações e armazenando o código fonte original em uma string separada.
  Se o arquivo fonte for inexistente, retorne.
  \Carregue o endereço completo deste arquivo fonte para o trecho deste arquivo fonte.
  Carregue o endereço completo deste arquivo fonte para uma string. \ necessário para expandir contrações.
  Se o erro do fluxo de entrada/saída não estiver em branco,
    Apresente uma mensagem de erro contendo "Erro #133. Não foi possível carregar o arquivo: " 
      junto com o endereço completo deste arquivo fonte seguido de ".";
    Retorne.
  Parse a string para o trecho deste arquivo fonte (para expandir contrações). \ < -------------------------------------------------------------


Rotina para que se parse uma string para uma segunda string (para expandir contrações):
\ Faz o parse da string do código fonte, expandindo contrações para o `Trecho` do objeto `ArquivoFonte`.
  Limpe a segunda string.
  Limpe uma terceira string.
  Lance o percorredor de contrações sobre a string.
  Itere.
    Se o segmento final deste percorredor de contrações estiver em branco, retorne.
    Posicione o segmento inicial deste percorredor de contrações sobre o segmento final deste percorredor de contrações.
    Mova o percorredor de contrações (englobando tudo). \ < -------------------------------------------------------------
    Se o conteúdo deste caractere inicial deste segmento inicial deste percorredor de contrações não for um byte ignorável,
      Acrescente o segmento inicial deste percorredor de contrações para a segunda string;
      Reitere.
    Acrescente o segmento inicial deste percorredor de contrações para a segunda string usando a terceira string (para expandir contrações).  \ < -------------------------------------------------------------
    Atribua o segmento inicial deste percorredor de contrações à terceira string.
  Reitere.


Rotina para que se mova um percorredor (englobando tudo):
  Posicione o segmento inicial deste percorredor sobre o segmento final deste percorredor.
  Se o segmento final deste percorredor estiver em branco, retorne.
  Se o conteúdo deste caractere inicial deste segmento final deste percorredor for irrelevante,
    Mova o percorredor (ignorando os caracteres irrelevantes);
    Retorne.
  Se o conteúdo deste caractere inicial deste segmento final deste percorredor for a barra invertida,
    Mova o percorredor (ignorando os comentários);
    Retorne.
  Se o conteúdo deste caractere inicial deste segmento final deste percorredor for o colchete esquerdo,
    Mova o percorredor (ignorando as observações);
    Retorne.
  Se o conteúdo deste caractere inicial deste segmento final deste percorredor for as aspas duplas,
    Mova o percorredor (conteúdo de texto);
    Retorne.
  Se o conteúdo deste caractere inicial deste segmento final deste percorredor for o parênteses esquerdo,
    Mova o percorredor (qualificadores);
    Retorne.
  Se o conteúdo deste caractere inicial deste segmento final deste percorredor for algum sinal de pontuação,
    Mova o percorredor (sinais de pontuação);
    Retorne.
  Se o percorredor estiver sobre algum possessivo inglês,
    Mova o percorredor (possessivo inglês);
    Retorne.
  Mova o percorredor (símbolos conectivos).

Rotina para que se mova um percorredor (ignorando os caracteres irrelevantes):
  Avance o percorredor.
  Se o segmento final deste percorredor estiver em branco, retorne.
  Se o conteúdo deste caractere inicial deste segmento final deste percorredor for irrelevante, reitere.

Rotina para que se mova um percorredor (ignorando os comentários):
  Avance o percorredor.
  Se o segmento final deste percorredor estiver em branco, retorne.
  Se o conteúdo deste caractere inicial deste segmento final deste percorredor não for o retorno de carro, reitere.

Rotina para que se mova um percorredor (ignorando as observações):
  Se o segmento final deste percorredor estiver em branco, retorne.
  Se o conteúdo deste caractere inicial deste segmento final deste percorredor for o retorno de carro, pare.
  Se o conteúdo deste caractere inicial deste segmento final deste percorredor for o colchete esquerdo, adicione 1 para uma contagem.
  Se o conteúdo deste caractere inicial deste segmento final deste percorredor for o colchete direito, subtraia 1 desde a contagem.
  Avance o percorredor.
  Se a contagem for 0, pare.
  Reitere.

Rotina para que se mova um percorredor (conteúdo de texto):
  Avance o percorredor.
  Se o segmento final deste percorredor estiver em branco, retorne.
  Se o conteúdo deste caractere inicial deste segmento final deste percorredor for o retorno de carro, retorne.
  Se o percorredor estiver sobre algum nested double-quote,
    Avance o percorredor;
    Reitere.
  Se o conteúdo deste caractere inicial deste segmento final deste percorredor for as aspas duplas,
    Avance o percorredor;
    Retorne.
  Reitere.

Rotina para que se mova um percorredor (qualificadores):
  Se o segmento final deste percorredor estiver em branco, retorne.
  Se o conteúdo deste caractere inicial deste segmento final deste percorredor for o retorno de carro, pare.
  Se o conteúdo deste caractere inicial deste segmento final deste percorredor for o parênteses esquerdo, adicione 1 para uma contagem.
  Se o conteúdo deste caractere inicial deste segmento final deste percorredor for o parênteses direito, subtraia 1 desde a contagem.
  Avance o percorredor.
  Se a contagem for 0, pare.
  Reitere.

Rotina para que se mova um percorredor (sinais de pontuação):
  Avance o percorredor.

Rotina para que se mova um percorredor (possessivo inglês):
  Avance o percorredor.
  Se o segmento final deste percorredor estiver em branco, retorne.
  Se o segmento final deste percorredor começa com "s", avance o percorredor.

Rotina para que se mova um percorredor (símbolos conectivos):
  Avance o percorredor.
  Se o segmento final deste percorredor estiver em branco, retorne.
  Se o percorredor estiver sobre algum possessivo inglês, retorne.
  Se o conteúdo deste caractere inicial deste segmento final deste percorredor for um byte ignorável, reitere.

Rotina para que se acrescente uma string para uma segunda string usando uma terceira string (para expandir contrações):
  \contrações
  Se a string for "ao",
    Acrescente "a o" para a segunda string;
    Retorne.
  Se a string for "à",
    Acrescente "a a" para a segunda string;
    Retorne.
  Se a string for "aos",
    Acrescente "a os" para a segunda string;
    Retorne.
  Se a string for "às",
    Acrescente "a as" para a segunda string;
    Retorne.
  Se a string for "d'o",
    Acrescente "d' o" para a segunda string;
    Retorne.
  Se a string for "d'os",
    Acrescente "d' os" para a segunda string;
    Retorne.
  Se a string for "d'a",
    Acrescente "d' a" para a segunda string;
    Retorne.
  Se a string for "d'as",
    Acrescente "d' as" para a segunda string;
    Retorne.
  Se a string for "d'um",
    Acrescente "d' um" para a segunda string;
    Retorne.
  Se a string for "d'uns",
    Acrescente "d' uns" para a segunda string;
    Retorne.
  Se a string for "d'uma",
    Acrescente "d' uma" para a segunda string;
    Retorne.
  Se a string for "d'umas",
    Acrescente "d' umas" para a segunda string;
    Retorne.
  \Se a string estiver precisando ser decomposta, acrescente "de o" para a segunda string; Retorne.
  \Se a string for "dos", determine se a string precisa ser decomposta.
  \Se a string precisa ser decomposta, acrescente "de os" para a segunda string; exit
  \Se a string for "da", determine se a string precisa ser decomposta.
  \Se a string precisa ser decomposta, acrescente "de a" para a segunda string; exit
  \Se a string for "das", determine se a string precisa ser decomposta.
  \Se a string precisa ser decomposta, acrescente "de as" para a segunda string; exit
  \Se a string for "do", acrescente "de o" para a segunda string; Retorne.
  \Se a string for "da", acrescente "de a" para a segunda string; Retorne.
  \Se a string for "dos", acrescente "de os" para a segunda string; Retorne.
  \Se a string for "das", acrescente "de as" para a segunda string; Retorne.
  Se a string for "dum",
    Acrescente "de esse" para a segunda string;
    Retorne.
  Se a string for "duma",
    Acrescente "de essa" para a segunda string;
    Retorne.
  Se a string for "dumas",
    Acrescente "de esses" para a segunda string;
    Retorne.
  Se a string for "duns",
    Acrescente "de esses" para a segunda string;
    Retorne.
  Se a string for "daqui",
    Acrescente "de aqui" para a segunda string;
    Retorne.
  Se a string for "dali",
    Acrescente "de ali" para a segunda string;
    Retorne.
  Se a string for "dele",
    Acrescente "de ele" para a segunda string;
    Retorne.
  Se a string for "dela",
    Acrescente "de ela" para a segunda string;
    Retorne.
  Se a string for "desse",
    Acrescente "de esse" para a segunda string;
    Retorne.
  Se a string for "dessa",
    Acrescente "de essa" para a segunda string;
    Retorne.
  Se a string for "desses",
    Acrescente "de esses" para a segunda string;
    Retorne.
  Se a string for "dessas",
    Acrescente "de essas" para a segunda string;
    Retorne.
  Se a string for "deste",
    Acrescente "de este" para a segunda string;
    Retorne.
  Se a string for "desta",
    Acrescente "de esta" para a segunda string;
    Retorne.
  Se a string for "destes",
    Acrescente "de estes" para a segunda string;
    Retorne.
  Se a string for "destas",
    Acrescente "de estas" para a segunda string;
    Retorne.
  Se a string for "disso",
    Acrescente "de isso" para a segunda string;
    Retorne.
  Se a string for "disto",
    Acrescente "de isto" para a segunda string;
    Retorne.
  Se a string for "nesse",
    Acrescente "em esse" para a segunda string;
    Retorne.
  Se a string for "nesses",
    Acrescente "em esses" para a segunda string;
    Retorne.
  Se a string for "neste",
    Acrescente "em este" para a segunda string;
    Retorne.
  Se a string for "nestes",
    Acrescente "em estes" para a segunda string;
    Retorne.
  Se a string for "nisso",
    Acrescente "em isso" para a segunda string;
    Retorne.
  Se a string for "nisto",
    Acrescente "em isto" para a segunda string;
    Retorne.
  Se a string for "nessa",
    Acrescente "em essa" para a segunda string;
    Retorne.
  Se a string for "nessas",
    Acrescente "em essas" para a segunda string;
    Retorne.
  Se a string for "nesta",
    Acrescente "em esta" para a segunda string;
    Retorne.
  Se a string for "nestas",
    Acrescente "em estas" para a segunda string;
    Retorne.
  \Se a string for "donde", acrescente "de onde" para a segunda string; Retorne.
  \Se a string for "dentre", acrescente "de entre" para a segunda string; Retorne.
  \Se a string for "dantes", acrescente "de antes" para a segunda string; Retorne.
  Se a string for "dalguém",
    Acrescente "de alguém" para a segunda string;
    Retorne.
  Se a string for "dalgum",
    Acrescente "de um" para a segunda string;
    Retorne.
  Se a string for "dalguma",
    Acrescente "de uma" para a segunda string;
    Retorne.
  Se a string for "dalguns",
    Acrescente "de uns" para a segunda string;
    Retorne.
  Se a string for "dalgumas",
    Acrescente "de umas" para a segunda string;
    Retorne.
  Se a string for "nalgum",
    Acrescente "em um" para a segunda string;
    Retorne.
  Se a string for "nalguma",
    Acrescente "em uma" para a segunda string;
    Retorne.
  Se a string for "nalguns",
    Acrescente "em uns" para a segunda string;
    Retorne.
  Se a string for "nalgumas",
    Acrescente "em umas" para a segunda string;
    Retorne.
  Se a string for "doutro",
    Acrescente "de outro" para a segunda string;
    Retorne.
  Se a string for "doutra",
    Acrescente "de outra" para a segunda string;
    Retorne.
  Se a string for "doutros",
    Acrescente "de outros" para a segunda string;
    Retorne.
  Se a string for "doutras",
    Acrescente "de outras" para a segunda string;
    Retorne.
  Se a string for "noutro",
    Acrescente "em outro" para a segunda string;
    Retorne.
  Se a string for "noutra",
    Acrescente "em outra" para a segunda string;
    Retorne.
  Se a string for "noutros",
    Acrescente "em outros" para a segunda string;
    Retorne.
  Se a string for "noutras",
    Acrescente "em outras" para a segunda string;
    Retorne.
   \Se a string deveria ser expandida usando a terceira string (análise de termos compostos), atribua "desde" para a string; atribua "" para a segunda string; Retorne.
  Se a string for "na",
    Acrescente "em a" para a segunda string;
    Retorne.
  Se a string for "no",
    Acrescente "em o" para a segunda string;
    Retorne.
  Se a string for "nos",
    Acrescente "em os" para a segunda string;
    Retorne.
  Se a string for "nas",
    Acrescente "em as" para a segunda string;
    Retorne.
  \Se a string for "noutro", acrescente "em outro" para a segunda string; Retorne.
  \Se a string for "noutra", acrescente "em outra" para a segunda string; Retorne.
  \Se a string for "noutros", acrescente "em outros" para a segunda string; Retorne.
  \Se a string for "noutras", acrescente "em outras" para a segunda string; Retorne.
  Se a string for "num",
    Acrescente "em um" para a segunda string;
    Retorne.
  Se a string for "numa",
    Acrescente "em uma" para a segunda string;
    Retorne.
  Se a string for "nuns",
    Acrescente "em uns" para a segunda string;
    Retorne.
  Se a string for "numas",
    Acrescente "em umas" para a segunda string;
    Retorne.
  Se a string for "pelo",
    Acrescente "por o" para a segunda string;
    Retorne.
  Se a string for "pela",
    Acrescente "por a" para a segunda string;
    Retorne.
  Se a string for "pelos",
    Acrescente "por os" para a segunda string;
    Retorne.
  Se a string for "pelas",
    Acrescente "por as" para a segunda string;
    Retorne.
  Acrescente a string para a segunda string.
